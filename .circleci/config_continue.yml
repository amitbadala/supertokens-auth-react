version: 2.1

orbs:
    continuation: circleci/continuation@0.1.2
    slack: circleci/slack@3.4.2
    jq: circleci/jq@2.2.0
jobs:
    publish:
        docker:
            - image: rishabhpoddar/supertokens_website_sdk_testing
        steps:
            - checkout
            - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            - run:
                  name: Publish
                  command: |
                      cd .circleci
                      ./publish.sh
            - slack/status
    build:
        docker:
            - image: rishabhpoddar/supertokens_website_sdk_testing
        steps:
            - checkout
            - run: apt-get install lsof
            - run: npm run init
            - run: npm run build-check
            - run: npm run size
            - run: npm run check-circular-dependencies
            - run: (cd .circleci/ && ./markTesting.sh)
            - persist_to_workspace:
                  root: / # relative path to our working directory
                  paths:
                      - usr/lib/node_modules
                      - root/project/node_modules
                      - root/project/test/server/node_modules
                      - root/project/examples/for-tests/node_modules
    test:
        docker:
            - image: rishabhpoddar/supertokens_website_sdk_testing
        environment:
            MOCHA_FILE: test_report/report_node-<< parameters.fdi-version >>.xml
        parameters:
            fdi-version:
                type: string
        parallelism: 4
        steps:
            - checkout
            - attach_workspace:
                  at: /
            - run: (cd .circleci && ./doTests.sh << parameters.fdi-version >>)
            - run: ls -la test_report
            - store_test_results:
                  path: test_report/report_node-<< parameters.fdi-version >>.xml
            - store_artifacts:
                  path: test_report/screenshots
                  destination: failed-test-screenshots
            - store_artifacts:
                  path: test_report/logs
                  destination: logfiles

    mark-passed:
        machine:
            image: ubuntu-1604:201903-01
        steps:
            - checkout
            - run: (cd .circleci && ./markPassed.sh)
            - slack/status

    update-demo-apps:
        machine:
            image: ubuntu-1604:201903-01
        steps:
            - add_ssh_keys:
                  fingerprints:
                      - "35:1e:5e:0a:95:ec:f3:3e:79:7b:b4:39:ac:00:5f:b2"
            - run:
                  name: updating emailpassword
                  command: |
                      ssh ubuntu@ssh.supertokens.com '\
                          cd supertokens-auth-react/examples/with-emailpassword/ && \
                          git reset --hard && \
                          git pull && \
                          (rm -f package-lock.json || true) && \
                          (rm -rf node_modules || true) && \
                          npm i && \
                          REACT_APP_API_PORT=10001 REACT_APP_API_URL=https://api-emailpassword.demo.supertokens.com REACT_APP_WEBSITE_PORT=10000 REACT_APP_WEBSITE_URL=https://emailpassword.demo.supertokens.com npm run build && \
                          docker rm demo-app -f || true && \
                          bash /home/ubuntu/supertokens-auth-react/examples/with-emailpassword/scripts/start_container.sh'
            - run:
                  name: updating thirdparty
                  command: |
                      ssh ubuntu@ssh.supertokens.com '\
                          cd supertokens-auth-react/examples/with-thirdparty/ && \
                          git reset --hard && \
                          git pull && \
                          (rm -f package-lock.json || true) && \
                          (rm -rf node_modules || true) && \
                          npm i && \
                          REACT_APP_API_PORT=10001 REACT_APP_API_URL=https://api-thirdparty.demo.supertokens.com REACT_APP_WEBSITE_PORT=10000 REACT_APP_WEBSITE_URL=https://thirdparty.demo.supertokens.com npm run build && \
                          docker rm demo-app-thirdparty -f || true && \
                          bash /home/ubuntu/supertokens-auth-react/examples/with-thirdparty/scripts/start_container.sh'
            - run:
                  name: updating thirdpartyemailpassword
                  command: |
                      ssh ubuntu@ssh.supertokens.com '\
                          cd supertokens-auth-react/examples/with-thirdpartyemailpassword/ && \
                          git reset --hard && \
                          git pull && \
                          (rm -f package-lock.json || true) && \
                          (rm -rf node_modules || true) && \
                          npm i && \
                          REACT_APP_API_PORT=10001 REACT_APP_API_URL=https://api-thirdpartyemailpassword.demo.supertokens.com REACT_APP_WEBSITE_PORT=10000 REACT_APP_WEBSITE_URL=https://thirdpartyemailpassword.demo.supertokens.com npm run build && \
                          docker rm demo-app-thirdpartyemailpassword -f || true && \
                          bash /home/ubuntu/supertokens-auth-react/examples/with-thirdpartyemailpassword/scripts/start_container.sh'
            - run:
                  name: updating passwordless
                  command: |
                      ssh ubuntu@ssh.supertokens.com '\
                          cd supertokens-auth-react/examples/with-passwordless/ && \
                          git reset --hard && \
                          git pull && \
                          (rm -f package-lock.json || true) && \
                          (rm -rf node_modules || true) && \
                          npm i && \
                          REACT_APP_API_PORT=10001 REACT_APP_API_URL=https://api-passwordless.demo.supertokens.com REACT_APP_WEBSITE_PORT=10000 REACT_APP_WEBSITE_URL=https://passwordless.demo.supertokens.com npm run build && \
                          docker rm demo-app-passwordless -f || true && \
                          bash /home/ubuntu/supertokens-auth-react/examples/with-passwordless/scripts/start_container.sh'
            - slack/status
    update-docs:
        docker:
            - image: rishabhpoddar/supertokens_website_sdk_testing
        steps:
            - checkout
            - run: cd ../ && git clone git@github.com:supertokens/supertokens-backend-website.git
            - run: (cd .circleci && ./updateDocsInWebsite.sh)
            - slack/status

workflows:
    version: 2
    tagged-build:
        jobs:
            - publish:
                  context:
                      - slack-notification
                  filters:
                      tags:
                          only: /v[0-9]+(\.[0-9]+)*/
                      branches:
                          ignore: /.*/
            - build
              # context:
              #     - slack-notification
            - test:
                  requires:
                      - build
                  matrix:
                      parameters:
                          fdi-version: placeholder
            - mark-passed:
                  # context:
                  #     - slack-notification
                  requires:
                      - test

            - update-demo-apps:
                  context:
                      - slack-notification
                  filters:
                      branches:
                          only:
                              - master
            - update-docs:
                  context:
                      - slack-notification
                  filters:
                      branches:
                          only:
                              - master
